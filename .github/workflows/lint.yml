name: Lint

on:
  push:
    branches:
      - master

permissions:
  pull-requests: write
  contents: read

jobs:
  optional-lint:
    name: Optional Lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      # Check spellings in the code
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Automatically generated token
          locale: "US"
          reporter: github-pr-check
          level: info
          filter_mode: diff_context

      # Static check shell scripts using shellcheck
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Automatically generated token
          reporter: github-pr-check
          level: info
          filter_mode: file

  lint-python-format:
    # Required workflow
    name: Python format
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      # Set up Python environment
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          # Version range or exact version of Python to use, using SemVer's version range syntax. Reads from .python-version if unset.
          python-version: "3.10"

      # Cache pip dependencies to speed up installs
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-lintrunner.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install Python dependencies and linting tools
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install lintrunner lintrunner-adapters
          lintrunner init

      # Run lintrunner to lint Python code
      - name: Run lintrunner on all files
        run: |
          set +e
          if ! lintrunner --force-color --all-files --tee-json=lint.json -v; then
              echo ""
              echo -e "\e[1m\e[36mYou can reproduce these results locally by using \`lintrunner\`. To set up lintrunner locally, see https://github.com/microsoft/onnxruntime/blob/main/docs/Coding_Conventions_and_Standards.md#linting .\e[0m"
              exit 1
          fi
